/*
Celenium API

Celenium TEST API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
	"time"
	"os"
)

// checks if the ResponsesNamespace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesNamespace{}

// ResponsesNamespace struct for ResponsesNamespace
type ResponsesNamespace struct {
	BlobsCount *int32 `json:"blobs_count,omitempty"`
	Hash *string `json:"hash,omitempty"`
	Id *int32 `json:"id,omitempty"`
	LastHeight *int64 `json:"last_height,omitempty"`
	LastMessageTime *time.Time `json:"last_message_time,omitempty"`
	Name *string `json:"name,omitempty"`
	NamespaceId **os.File `json:"namespace_id,omitempty"`
	PfbCount *int32 `json:"pfb_count,omitempty"`
	Reserved *bool `json:"reserved,omitempty"`
	Size *int32 `json:"size,omitempty"`
	Version *int32 `json:"version,omitempty"`
}

// NewResponsesNamespace instantiates a new ResponsesNamespace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesNamespace() *ResponsesNamespace {
	this := ResponsesNamespace{}
	return &this
}

// NewResponsesNamespaceWithDefaults instantiates a new ResponsesNamespace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesNamespaceWithDefaults() *ResponsesNamespace {
	this := ResponsesNamespace{}
	return &this
}

// GetBlobsCount returns the BlobsCount field value if set, zero value otherwise.
func (o *ResponsesNamespace) GetBlobsCount() int32 {
	if o == nil || IsNil(o.BlobsCount) {
		var ret int32
		return ret
	}
	return *o.BlobsCount
}

// GetBlobsCountOk returns a tuple with the BlobsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesNamespace) GetBlobsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.BlobsCount) {
		return nil, false
	}
	return o.BlobsCount, true
}

// HasBlobsCount returns a boolean if a field has been set.
func (o *ResponsesNamespace) HasBlobsCount() bool {
	if o != nil && !IsNil(o.BlobsCount) {
		return true
	}

	return false
}

// SetBlobsCount gets a reference to the given int32 and assigns it to the BlobsCount field.
func (o *ResponsesNamespace) SetBlobsCount(v int32) {
	o.BlobsCount = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *ResponsesNamespace) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesNamespace) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *ResponsesNamespace) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *ResponsesNamespace) SetHash(v string) {
	o.Hash = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponsesNamespace) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesNamespace) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponsesNamespace) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ResponsesNamespace) SetId(v int32) {
	o.Id = &v
}

// GetLastHeight returns the LastHeight field value if set, zero value otherwise.
func (o *ResponsesNamespace) GetLastHeight() int64 {
	if o == nil || IsNil(o.LastHeight) {
		var ret int64
		return ret
	}
	return *o.LastHeight
}

// GetLastHeightOk returns a tuple with the LastHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesNamespace) GetLastHeightOk() (*int64, bool) {
	if o == nil || IsNil(o.LastHeight) {
		return nil, false
	}
	return o.LastHeight, true
}

// HasLastHeight returns a boolean if a field has been set.
func (o *ResponsesNamespace) HasLastHeight() bool {
	if o != nil && !IsNil(o.LastHeight) {
		return true
	}

	return false
}

// SetLastHeight gets a reference to the given int64 and assigns it to the LastHeight field.
func (o *ResponsesNamespace) SetLastHeight(v int64) {
	o.LastHeight = &v
}

// GetLastMessageTime returns the LastMessageTime field value if set, zero value otherwise.
func (o *ResponsesNamespace) GetLastMessageTime() time.Time {
	if o == nil || IsNil(o.LastMessageTime) {
		var ret time.Time
		return ret
	}
	return *o.LastMessageTime
}

// GetLastMessageTimeOk returns a tuple with the LastMessageTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesNamespace) GetLastMessageTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastMessageTime) {
		return nil, false
	}
	return o.LastMessageTime, true
}

// HasLastMessageTime returns a boolean if a field has been set.
func (o *ResponsesNamespace) HasLastMessageTime() bool {
	if o != nil && !IsNil(o.LastMessageTime) {
		return true
	}

	return false
}

// SetLastMessageTime gets a reference to the given time.Time and assigns it to the LastMessageTime field.
func (o *ResponsesNamespace) SetLastMessageTime(v time.Time) {
	o.LastMessageTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponsesNamespace) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesNamespace) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponsesNamespace) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ResponsesNamespace) SetName(v string) {
	o.Name = &v
}

// GetNamespaceId returns the NamespaceId field value if set, zero value otherwise.
func (o *ResponsesNamespace) GetNamespaceId() *os.File {
	if o == nil || IsNil(o.NamespaceId) {
		var ret *os.File
		return ret
	}
	return *o.NamespaceId
}

// GetNamespaceIdOk returns a tuple with the NamespaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesNamespace) GetNamespaceIdOk() (**os.File, bool) {
	if o == nil || IsNil(o.NamespaceId) {
		return nil, false
	}
	return o.NamespaceId, true
}

// HasNamespaceId returns a boolean if a field has been set.
func (o *ResponsesNamespace) HasNamespaceId() bool {
	if o != nil && !IsNil(o.NamespaceId) {
		return true
	}

	return false
}

// SetNamespaceId gets a reference to the given *os.File and assigns it to the NamespaceId field.
func (o *ResponsesNamespace) SetNamespaceId(v *os.File) {
	o.NamespaceId = &v
}

// GetPfbCount returns the PfbCount field value if set, zero value otherwise.
func (o *ResponsesNamespace) GetPfbCount() int32 {
	if o == nil || IsNil(o.PfbCount) {
		var ret int32
		return ret
	}
	return *o.PfbCount
}

// GetPfbCountOk returns a tuple with the PfbCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesNamespace) GetPfbCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PfbCount) {
		return nil, false
	}
	return o.PfbCount, true
}

// HasPfbCount returns a boolean if a field has been set.
func (o *ResponsesNamespace) HasPfbCount() bool {
	if o != nil && !IsNil(o.PfbCount) {
		return true
	}

	return false
}

// SetPfbCount gets a reference to the given int32 and assigns it to the PfbCount field.
func (o *ResponsesNamespace) SetPfbCount(v int32) {
	o.PfbCount = &v
}

// GetReserved returns the Reserved field value if set, zero value otherwise.
func (o *ResponsesNamespace) GetReserved() bool {
	if o == nil || IsNil(o.Reserved) {
		var ret bool
		return ret
	}
	return *o.Reserved
}

// GetReservedOk returns a tuple with the Reserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesNamespace) GetReservedOk() (*bool, bool) {
	if o == nil || IsNil(o.Reserved) {
		return nil, false
	}
	return o.Reserved, true
}

// HasReserved returns a boolean if a field has been set.
func (o *ResponsesNamespace) HasReserved() bool {
	if o != nil && !IsNil(o.Reserved) {
		return true
	}

	return false
}

// SetReserved gets a reference to the given bool and assigns it to the Reserved field.
func (o *ResponsesNamespace) SetReserved(v bool) {
	o.Reserved = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ResponsesNamespace) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesNamespace) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ResponsesNamespace) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *ResponsesNamespace) SetSize(v int32) {
	o.Size = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ResponsesNamespace) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesNamespace) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ResponsesNamespace) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *ResponsesNamespace) SetVersion(v int32) {
	o.Version = &v
}

func (o ResponsesNamespace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesNamespace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlobsCount) {
		toSerialize["blobs_count"] = o.BlobsCount
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastHeight) {
		toSerialize["last_height"] = o.LastHeight
	}
	if !IsNil(o.LastMessageTime) {
		toSerialize["last_message_time"] = o.LastMessageTime
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NamespaceId) {
		toSerialize["namespace_id"] = o.NamespaceId
	}
	if !IsNil(o.PfbCount) {
		toSerialize["pfb_count"] = o.PfbCount
	}
	if !IsNil(o.Reserved) {
		toSerialize["reserved"] = o.Reserved
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableResponsesNamespace struct {
	value *ResponsesNamespace
	isSet bool
}

func (v NullableResponsesNamespace) Get() *ResponsesNamespace {
	return v.value
}

func (v *NullableResponsesNamespace) Set(val *ResponsesNamespace) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesNamespace) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesNamespace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesNamespace(val *ResponsesNamespace) *NullableResponsesNamespace {
	return &NullableResponsesNamespace{value: val, isSet: true}
}

func (v NullableResponsesNamespace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesNamespace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


