/*
Celenium API

This is docs of Celenium API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
	"time"
)

// checks if the ResponsesRollupWithStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesRollupWithStats{}

// ResponsesRollupWithStats struct for ResponsesRollupWithStats
type ResponsesRollupWithStats struct {
	BlobsCount *int32 `json:"blobs_count,omitempty"`
	BlobsCountPct *float32 `json:"blobs_count_pct,omitempty"`
	Bridge *string `json:"bridge,omitempty"`
	Description *string `json:"description,omitempty"`
	Explorer *string `json:"explorer,omitempty"`
	Fee *string `json:"fee,omitempty"`
	FeePct *float32 `json:"fee_pct,omitempty"`
	FirstMessageTime *time.Time `json:"first_message_time,omitempty"`
	Github *string `json:"github,omitempty"`
	Id *int32 `json:"id,omitempty"`
	L2Beat *string `json:"l2_beat,omitempty"`
	LastMessageTime *time.Time `json:"last_message_time,omitempty"`
	Links []string `json:"links,omitempty"`
	Logo *string `json:"logo,omitempty"`
	Name *string `json:"name,omitempty"`
	Size *int32 `json:"size,omitempty"`
	SizePct *float32 `json:"size_pct,omitempty"`
	Slug *string `json:"slug,omitempty"`
	Stack *string `json:"stack,omitempty"`
	Twitter *string `json:"twitter,omitempty"`
	Website *string `json:"website,omitempty"`
}

// NewResponsesRollupWithStats instantiates a new ResponsesRollupWithStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesRollupWithStats() *ResponsesRollupWithStats {
	this := ResponsesRollupWithStats{}
	return &this
}

// NewResponsesRollupWithStatsWithDefaults instantiates a new ResponsesRollupWithStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesRollupWithStatsWithDefaults() *ResponsesRollupWithStats {
	this := ResponsesRollupWithStats{}
	return &this
}

// GetBlobsCount returns the BlobsCount field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetBlobsCount() int32 {
	if o == nil || IsNil(o.BlobsCount) {
		var ret int32
		return ret
	}
	return *o.BlobsCount
}

// GetBlobsCountOk returns a tuple with the BlobsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetBlobsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.BlobsCount) {
		return nil, false
	}
	return o.BlobsCount, true
}

// HasBlobsCount returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasBlobsCount() bool {
	if o != nil && !IsNil(o.BlobsCount) {
		return true
	}

	return false
}

// SetBlobsCount gets a reference to the given int32 and assigns it to the BlobsCount field.
func (o *ResponsesRollupWithStats) SetBlobsCount(v int32) {
	o.BlobsCount = &v
}

// GetBlobsCountPct returns the BlobsCountPct field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetBlobsCountPct() float32 {
	if o == nil || IsNil(o.BlobsCountPct) {
		var ret float32
		return ret
	}
	return *o.BlobsCountPct
}

// GetBlobsCountPctOk returns a tuple with the BlobsCountPct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetBlobsCountPctOk() (*float32, bool) {
	if o == nil || IsNil(o.BlobsCountPct) {
		return nil, false
	}
	return o.BlobsCountPct, true
}

// HasBlobsCountPct returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasBlobsCountPct() bool {
	if o != nil && !IsNil(o.BlobsCountPct) {
		return true
	}

	return false
}

// SetBlobsCountPct gets a reference to the given float32 and assigns it to the BlobsCountPct field.
func (o *ResponsesRollupWithStats) SetBlobsCountPct(v float32) {
	o.BlobsCountPct = &v
}

// GetBridge returns the Bridge field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetBridge() string {
	if o == nil || IsNil(o.Bridge) {
		var ret string
		return ret
	}
	return *o.Bridge
}

// GetBridgeOk returns a tuple with the Bridge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetBridgeOk() (*string, bool) {
	if o == nil || IsNil(o.Bridge) {
		return nil, false
	}
	return o.Bridge, true
}

// HasBridge returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasBridge() bool {
	if o != nil && !IsNil(o.Bridge) {
		return true
	}

	return false
}

// SetBridge gets a reference to the given string and assigns it to the Bridge field.
func (o *ResponsesRollupWithStats) SetBridge(v string) {
	o.Bridge = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResponsesRollupWithStats) SetDescription(v string) {
	o.Description = &v
}

// GetExplorer returns the Explorer field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetExplorer() string {
	if o == nil || IsNil(o.Explorer) {
		var ret string
		return ret
	}
	return *o.Explorer
}

// GetExplorerOk returns a tuple with the Explorer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetExplorerOk() (*string, bool) {
	if o == nil || IsNil(o.Explorer) {
		return nil, false
	}
	return o.Explorer, true
}

// HasExplorer returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasExplorer() bool {
	if o != nil && !IsNil(o.Explorer) {
		return true
	}

	return false
}

// SetExplorer gets a reference to the given string and assigns it to the Explorer field.
func (o *ResponsesRollupWithStats) SetExplorer(v string) {
	o.Explorer = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetFee() string {
	if o == nil || IsNil(o.Fee) {
		var ret string
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetFeeOk() (*string, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given string and assigns it to the Fee field.
func (o *ResponsesRollupWithStats) SetFee(v string) {
	o.Fee = &v
}

// GetFeePct returns the FeePct field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetFeePct() float32 {
	if o == nil || IsNil(o.FeePct) {
		var ret float32
		return ret
	}
	return *o.FeePct
}

// GetFeePctOk returns a tuple with the FeePct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetFeePctOk() (*float32, bool) {
	if o == nil || IsNil(o.FeePct) {
		return nil, false
	}
	return o.FeePct, true
}

// HasFeePct returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasFeePct() bool {
	if o != nil && !IsNil(o.FeePct) {
		return true
	}

	return false
}

// SetFeePct gets a reference to the given float32 and assigns it to the FeePct field.
func (o *ResponsesRollupWithStats) SetFeePct(v float32) {
	o.FeePct = &v
}

// GetFirstMessageTime returns the FirstMessageTime field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetFirstMessageTime() time.Time {
	if o == nil || IsNil(o.FirstMessageTime) {
		var ret time.Time
		return ret
	}
	return *o.FirstMessageTime
}

// GetFirstMessageTimeOk returns a tuple with the FirstMessageTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetFirstMessageTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FirstMessageTime) {
		return nil, false
	}
	return o.FirstMessageTime, true
}

// HasFirstMessageTime returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasFirstMessageTime() bool {
	if o != nil && !IsNil(o.FirstMessageTime) {
		return true
	}

	return false
}

// SetFirstMessageTime gets a reference to the given time.Time and assigns it to the FirstMessageTime field.
func (o *ResponsesRollupWithStats) SetFirstMessageTime(v time.Time) {
	o.FirstMessageTime = &v
}

// GetGithub returns the Github field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetGithub() string {
	if o == nil || IsNil(o.Github) {
		var ret string
		return ret
	}
	return *o.Github
}

// GetGithubOk returns a tuple with the Github field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetGithubOk() (*string, bool) {
	if o == nil || IsNil(o.Github) {
		return nil, false
	}
	return o.Github, true
}

// HasGithub returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasGithub() bool {
	if o != nil && !IsNil(o.Github) {
		return true
	}

	return false
}

// SetGithub gets a reference to the given string and assigns it to the Github field.
func (o *ResponsesRollupWithStats) SetGithub(v string) {
	o.Github = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ResponsesRollupWithStats) SetId(v int32) {
	o.Id = &v
}

// GetL2Beat returns the L2Beat field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetL2Beat() string {
	if o == nil || IsNil(o.L2Beat) {
		var ret string
		return ret
	}
	return *o.L2Beat
}

// GetL2BeatOk returns a tuple with the L2Beat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetL2BeatOk() (*string, bool) {
	if o == nil || IsNil(o.L2Beat) {
		return nil, false
	}
	return o.L2Beat, true
}

// HasL2Beat returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasL2Beat() bool {
	if o != nil && !IsNil(o.L2Beat) {
		return true
	}

	return false
}

// SetL2Beat gets a reference to the given string and assigns it to the L2Beat field.
func (o *ResponsesRollupWithStats) SetL2Beat(v string) {
	o.L2Beat = &v
}

// GetLastMessageTime returns the LastMessageTime field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetLastMessageTime() time.Time {
	if o == nil || IsNil(o.LastMessageTime) {
		var ret time.Time
		return ret
	}
	return *o.LastMessageTime
}

// GetLastMessageTimeOk returns a tuple with the LastMessageTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetLastMessageTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastMessageTime) {
		return nil, false
	}
	return o.LastMessageTime, true
}

// HasLastMessageTime returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasLastMessageTime() bool {
	if o != nil && !IsNil(o.LastMessageTime) {
		return true
	}

	return false
}

// SetLastMessageTime gets a reference to the given time.Time and assigns it to the LastMessageTime field.
func (o *ResponsesRollupWithStats) SetLastMessageTime(v time.Time) {
	o.LastMessageTime = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetLinks() []string {
	if o == nil || IsNil(o.Links) {
		var ret []string
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetLinksOk() ([]string, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []string and assigns it to the Links field.
func (o *ResponsesRollupWithStats) SetLinks(v []string) {
	o.Links = v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *ResponsesRollupWithStats) SetLogo(v string) {
	o.Logo = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ResponsesRollupWithStats) SetName(v string) {
	o.Name = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *ResponsesRollupWithStats) SetSize(v int32) {
	o.Size = &v
}

// GetSizePct returns the SizePct field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetSizePct() float32 {
	if o == nil || IsNil(o.SizePct) {
		var ret float32
		return ret
	}
	return *o.SizePct
}

// GetSizePctOk returns a tuple with the SizePct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetSizePctOk() (*float32, bool) {
	if o == nil || IsNil(o.SizePct) {
		return nil, false
	}
	return o.SizePct, true
}

// HasSizePct returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasSizePct() bool {
	if o != nil && !IsNil(o.SizePct) {
		return true
	}

	return false
}

// SetSizePct gets a reference to the given float32 and assigns it to the SizePct field.
func (o *ResponsesRollupWithStats) SetSizePct(v float32) {
	o.SizePct = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *ResponsesRollupWithStats) SetSlug(v string) {
	o.Slug = &v
}

// GetStack returns the Stack field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetStack() string {
	if o == nil || IsNil(o.Stack) {
		var ret string
		return ret
	}
	return *o.Stack
}

// GetStackOk returns a tuple with the Stack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetStackOk() (*string, bool) {
	if o == nil || IsNil(o.Stack) {
		return nil, false
	}
	return o.Stack, true
}

// HasStack returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasStack() bool {
	if o != nil && !IsNil(o.Stack) {
		return true
	}

	return false
}

// SetStack gets a reference to the given string and assigns it to the Stack field.
func (o *ResponsesRollupWithStats) SetStack(v string) {
	o.Stack = &v
}

// GetTwitter returns the Twitter field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetTwitter() string {
	if o == nil || IsNil(o.Twitter) {
		var ret string
		return ret
	}
	return *o.Twitter
}

// GetTwitterOk returns a tuple with the Twitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetTwitterOk() (*string, bool) {
	if o == nil || IsNil(o.Twitter) {
		return nil, false
	}
	return o.Twitter, true
}

// HasTwitter returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasTwitter() bool {
	if o != nil && !IsNil(o.Twitter) {
		return true
	}

	return false
}

// SetTwitter gets a reference to the given string and assigns it to the Twitter field.
func (o *ResponsesRollupWithStats) SetTwitter(v string) {
	o.Twitter = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *ResponsesRollupWithStats) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithStats) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *ResponsesRollupWithStats) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *ResponsesRollupWithStats) SetWebsite(v string) {
	o.Website = &v
}

func (o ResponsesRollupWithStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesRollupWithStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlobsCount) {
		toSerialize["blobs_count"] = o.BlobsCount
	}
	if !IsNil(o.BlobsCountPct) {
		toSerialize["blobs_count_pct"] = o.BlobsCountPct
	}
	if !IsNil(o.Bridge) {
		toSerialize["bridge"] = o.Bridge
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Explorer) {
		toSerialize["explorer"] = o.Explorer
	}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !IsNil(o.FeePct) {
		toSerialize["fee_pct"] = o.FeePct
	}
	if !IsNil(o.FirstMessageTime) {
		toSerialize["first_message_time"] = o.FirstMessageTime
	}
	if !IsNil(o.Github) {
		toSerialize["github"] = o.Github
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.L2Beat) {
		toSerialize["l2_beat"] = o.L2Beat
	}
	if !IsNil(o.LastMessageTime) {
		toSerialize["last_message_time"] = o.LastMessageTime
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.SizePct) {
		toSerialize["size_pct"] = o.SizePct
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Stack) {
		toSerialize["stack"] = o.Stack
	}
	if !IsNil(o.Twitter) {
		toSerialize["twitter"] = o.Twitter
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	return toSerialize, nil
}

type NullableResponsesRollupWithStats struct {
	value *ResponsesRollupWithStats
	isSet bool
}

func (v NullableResponsesRollupWithStats) Get() *ResponsesRollupWithStats {
	return v.value
}

func (v *NullableResponsesRollupWithStats) Set(val *ResponsesRollupWithStats) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesRollupWithStats) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesRollupWithStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesRollupWithStats(val *ResponsesRollupWithStats) *NullableResponsesRollupWithStats {
	return &NullableResponsesRollupWithStats{value: val, isSet: true}
}

func (v NullableResponsesRollupWithStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesRollupWithStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


