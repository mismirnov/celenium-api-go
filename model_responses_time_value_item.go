/*
Celenium API

Celenium TEST API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
	"time"
)

// checks if the ResponsesTimeValueItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesTimeValueItem{}

// ResponsesTimeValueItem struct for ResponsesTimeValueItem
type ResponsesTimeValueItem struct {
	Time *time.Time `json:"time,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewResponsesTimeValueItem instantiates a new ResponsesTimeValueItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesTimeValueItem() *ResponsesTimeValueItem {
	this := ResponsesTimeValueItem{}
	return &this
}

// NewResponsesTimeValueItemWithDefaults instantiates a new ResponsesTimeValueItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesTimeValueItemWithDefaults() *ResponsesTimeValueItem {
	this := ResponsesTimeValueItem{}
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ResponsesTimeValueItem) GetTime() time.Time {
	if o == nil || IsNil(o.Time) {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesTimeValueItem) GetTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ResponsesTimeValueItem) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *ResponsesTimeValueItem) SetTime(v time.Time) {
	o.Time = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ResponsesTimeValueItem) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesTimeValueItem) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ResponsesTimeValueItem) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ResponsesTimeValueItem) SetValue(v string) {
	o.Value = &v
}

func (o ResponsesTimeValueItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesTimeValueItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableResponsesTimeValueItem struct {
	value *ResponsesTimeValueItem
	isSet bool
}

func (v NullableResponsesTimeValueItem) Get() *ResponsesTimeValueItem {
	return v.value
}

func (v *NullableResponsesTimeValueItem) Set(val *ResponsesTimeValueItem) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesTimeValueItem) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesTimeValueItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesTimeValueItem(val *ResponsesTimeValueItem) *NullableResponsesTimeValueItem {
	return &NullableResponsesTimeValueItem{value: val, isSet: true}
}

func (v NullableResponsesTimeValueItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesTimeValueItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


