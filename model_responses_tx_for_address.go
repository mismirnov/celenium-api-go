/*
Celenium API

This is docs of Celenium API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
	"os"
)

// checks if the ResponsesTxForAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesTxForAddress{}

// ResponsesTxForAddress struct for ResponsesTxForAddress
type ResponsesTxForAddress struct {
	Fee *string `json:"fee,omitempty"`
	Hash **os.File `json:"hash,omitempty"`
	MessageTypes []TypesMsgType `json:"message_types,omitempty"`
	MessagesCount *int64 `json:"messages_count,omitempty"`
	Status *GithubComCeleniumIoCelestiaIndexerInternalStorageTypesStatus `json:"status,omitempty"`
}

// NewResponsesTxForAddress instantiates a new ResponsesTxForAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesTxForAddress() *ResponsesTxForAddress {
	this := ResponsesTxForAddress{}
	return &this
}

// NewResponsesTxForAddressWithDefaults instantiates a new ResponsesTxForAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesTxForAddressWithDefaults() *ResponsesTxForAddress {
	this := ResponsesTxForAddress{}
	return &this
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *ResponsesTxForAddress) GetFee() string {
	if o == nil || IsNil(o.Fee) {
		var ret string
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesTxForAddress) GetFeeOk() (*string, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *ResponsesTxForAddress) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given string and assigns it to the Fee field.
func (o *ResponsesTxForAddress) SetFee(v string) {
	o.Fee = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *ResponsesTxForAddress) GetHash() *os.File {
	if o == nil || IsNil(o.Hash) {
		var ret *os.File
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesTxForAddress) GetHashOk() (**os.File, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *ResponsesTxForAddress) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given *os.File and assigns it to the Hash field.
func (o *ResponsesTxForAddress) SetHash(v *os.File) {
	o.Hash = &v
}

// GetMessageTypes returns the MessageTypes field value if set, zero value otherwise.
func (o *ResponsesTxForAddress) GetMessageTypes() []TypesMsgType {
	if o == nil || IsNil(o.MessageTypes) {
		var ret []TypesMsgType
		return ret
	}
	return o.MessageTypes
}

// GetMessageTypesOk returns a tuple with the MessageTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesTxForAddress) GetMessageTypesOk() ([]TypesMsgType, bool) {
	if o == nil || IsNil(o.MessageTypes) {
		return nil, false
	}
	return o.MessageTypes, true
}

// HasMessageTypes returns a boolean if a field has been set.
func (o *ResponsesTxForAddress) HasMessageTypes() bool {
	if o != nil && !IsNil(o.MessageTypes) {
		return true
	}

	return false
}

// SetMessageTypes gets a reference to the given []TypesMsgType and assigns it to the MessageTypes field.
func (o *ResponsesTxForAddress) SetMessageTypes(v []TypesMsgType) {
	o.MessageTypes = v
}

// GetMessagesCount returns the MessagesCount field value if set, zero value otherwise.
func (o *ResponsesTxForAddress) GetMessagesCount() int64 {
	if o == nil || IsNil(o.MessagesCount) {
		var ret int64
		return ret
	}
	return *o.MessagesCount
}

// GetMessagesCountOk returns a tuple with the MessagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesTxForAddress) GetMessagesCountOk() (*int64, bool) {
	if o == nil || IsNil(o.MessagesCount) {
		return nil, false
	}
	return o.MessagesCount, true
}

// HasMessagesCount returns a boolean if a field has been set.
func (o *ResponsesTxForAddress) HasMessagesCount() bool {
	if o != nil && !IsNil(o.MessagesCount) {
		return true
	}

	return false
}

// SetMessagesCount gets a reference to the given int64 and assigns it to the MessagesCount field.
func (o *ResponsesTxForAddress) SetMessagesCount(v int64) {
	o.MessagesCount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ResponsesTxForAddress) GetStatus() GithubComCeleniumIoCelestiaIndexerInternalStorageTypesStatus {
	if o == nil || IsNil(o.Status) {
		var ret GithubComCeleniumIoCelestiaIndexerInternalStorageTypesStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesTxForAddress) GetStatusOk() (*GithubComCeleniumIoCelestiaIndexerInternalStorageTypesStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ResponsesTxForAddress) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given GithubComCeleniumIoCelestiaIndexerInternalStorageTypesStatus and assigns it to the Status field.
func (o *ResponsesTxForAddress) SetStatus(v GithubComCeleniumIoCelestiaIndexerInternalStorageTypesStatus) {
	o.Status = &v
}

func (o ResponsesTxForAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesTxForAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.MessageTypes) {
		toSerialize["message_types"] = o.MessageTypes
	}
	if !IsNil(o.MessagesCount) {
		toSerialize["messages_count"] = o.MessagesCount
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableResponsesTxForAddress struct {
	value *ResponsesTxForAddress
	isSet bool
}

func (v NullableResponsesTxForAddress) Get() *ResponsesTxForAddress {
	return v.value
}

func (v *NullableResponsesTxForAddress) Set(val *ResponsesTxForAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesTxForAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesTxForAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesTxForAddress(val *ResponsesTxForAddress) *NullableResponsesTxForAddress {
	return &NullableResponsesTxForAddress{value: val, isSet: true}
}

func (v NullableResponsesTxForAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesTxForAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


