/*
Celenium API

This is docs of Celenium API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
)

// checks if the ResponsesUndelegation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesUndelegation{}

// ResponsesUndelegation struct for ResponsesUndelegation
type ResponsesUndelegation struct {
	Amount *string `json:"amount,omitempty"`
	CompletionTime *string `json:"completion_time,omitempty"`
	Delegator *string `json:"delegator,omitempty"`
	Height *int32 `json:"height,omitempty"`
	Time *string `json:"time,omitempty"`
	Validator *ResponsesShortValidator `json:"validator,omitempty"`
}

// NewResponsesUndelegation instantiates a new ResponsesUndelegation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesUndelegation() *ResponsesUndelegation {
	this := ResponsesUndelegation{}
	return &this
}

// NewResponsesUndelegationWithDefaults instantiates a new ResponsesUndelegation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesUndelegationWithDefaults() *ResponsesUndelegation {
	this := ResponsesUndelegation{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ResponsesUndelegation) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesUndelegation) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ResponsesUndelegation) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *ResponsesUndelegation) SetAmount(v string) {
	o.Amount = &v
}

// GetCompletionTime returns the CompletionTime field value if set, zero value otherwise.
func (o *ResponsesUndelegation) GetCompletionTime() string {
	if o == nil || IsNil(o.CompletionTime) {
		var ret string
		return ret
	}
	return *o.CompletionTime
}

// GetCompletionTimeOk returns a tuple with the CompletionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesUndelegation) GetCompletionTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CompletionTime) {
		return nil, false
	}
	return o.CompletionTime, true
}

// HasCompletionTime returns a boolean if a field has been set.
func (o *ResponsesUndelegation) HasCompletionTime() bool {
	if o != nil && !IsNil(o.CompletionTime) {
		return true
	}

	return false
}

// SetCompletionTime gets a reference to the given string and assigns it to the CompletionTime field.
func (o *ResponsesUndelegation) SetCompletionTime(v string) {
	o.CompletionTime = &v
}

// GetDelegator returns the Delegator field value if set, zero value otherwise.
func (o *ResponsesUndelegation) GetDelegator() string {
	if o == nil || IsNil(o.Delegator) {
		var ret string
		return ret
	}
	return *o.Delegator
}

// GetDelegatorOk returns a tuple with the Delegator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesUndelegation) GetDelegatorOk() (*string, bool) {
	if o == nil || IsNil(o.Delegator) {
		return nil, false
	}
	return o.Delegator, true
}

// HasDelegator returns a boolean if a field has been set.
func (o *ResponsesUndelegation) HasDelegator() bool {
	if o != nil && !IsNil(o.Delegator) {
		return true
	}

	return false
}

// SetDelegator gets a reference to the given string and assigns it to the Delegator field.
func (o *ResponsesUndelegation) SetDelegator(v string) {
	o.Delegator = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ResponsesUndelegation) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesUndelegation) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ResponsesUndelegation) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *ResponsesUndelegation) SetHeight(v int32) {
	o.Height = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ResponsesUndelegation) GetTime() string {
	if o == nil || IsNil(o.Time) {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesUndelegation) GetTimeOk() (*string, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ResponsesUndelegation) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *ResponsesUndelegation) SetTime(v string) {
	o.Time = &v
}

// GetValidator returns the Validator field value if set, zero value otherwise.
func (o *ResponsesUndelegation) GetValidator() ResponsesShortValidator {
	if o == nil || IsNil(o.Validator) {
		var ret ResponsesShortValidator
		return ret
	}
	return *o.Validator
}

// GetValidatorOk returns a tuple with the Validator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesUndelegation) GetValidatorOk() (*ResponsesShortValidator, bool) {
	if o == nil || IsNil(o.Validator) {
		return nil, false
	}
	return o.Validator, true
}

// HasValidator returns a boolean if a field has been set.
func (o *ResponsesUndelegation) HasValidator() bool {
	if o != nil && !IsNil(o.Validator) {
		return true
	}

	return false
}

// SetValidator gets a reference to the given ResponsesShortValidator and assigns it to the Validator field.
func (o *ResponsesUndelegation) SetValidator(v ResponsesShortValidator) {
	o.Validator = &v
}

func (o ResponsesUndelegation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesUndelegation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CompletionTime) {
		toSerialize["completion_time"] = o.CompletionTime
	}
	if !IsNil(o.Delegator) {
		toSerialize["delegator"] = o.Delegator
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Validator) {
		toSerialize["validator"] = o.Validator
	}
	return toSerialize, nil
}

type NullableResponsesUndelegation struct {
	value *ResponsesUndelegation
	isSet bool
}

func (v NullableResponsesUndelegation) Get() *ResponsesUndelegation {
	return v.value
}

func (v *NullableResponsesUndelegation) Set(val *ResponsesUndelegation) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesUndelegation) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesUndelegation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesUndelegation(val *ResponsesUndelegation) *NullableResponsesUndelegation {
	return &NullableResponsesUndelegation{value: val, isSet: true}
}

func (v NullableResponsesUndelegation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesUndelegation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


